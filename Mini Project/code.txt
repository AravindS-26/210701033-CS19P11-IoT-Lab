// Define the pin where the gas sensor is connected
const int gasSensorPin = A0;  // Analog pin A0

void setup() {
  // Initialize serial communication at a baud rate of 9600
  Serial.begin(9600);
  // Print a message to the Serial Monitor
  Serial.println("Gas Sensor Test");
}

void loop() {
  // Read the analog value from the gas sensor
  int sensorValue = analogRead(gasSensorPin);

  // Print the sensor value to the Serial Monitor
  Serial.print("Gas Sensor Value: ");
  Serial.println(sensorValue);

  // Wait for a second before taking the next reading
  delay(1000);
}

//python script to convert the data into csv

import serial
import time
import csv

def main():
    try:
        # Open the serial port (replace 'COM7' with the correct port number)
        print("Attempting to open serial port...")
        ser = serial.Serial('COM7', 115200, timeout=1)
        print("Serial port opened successfully")
        time.sleep(2)  # Wait for the serial connection to initialize

        # Open a CSV file to write the data
        with open('sensor_data.csv', mode='w', newline='') as file:
            writer = csv.writer(file)
            writer.writerow(['Timestamp', 'SensorValue'])  # Write header
            print("CSV file opened and header written")

            while True:
                if ser.in_waiting > 0:
                    try:
                        line = ser.readline().decode('utf-8', errors='ignore').strip()
                        if line:  # Ensure that the line is not empty
                            timestamp = time.strftime('%Y-%m-%d %H:%M:%S')
                            writer.writerow([timestamp, line])
                            print(f"{timestamp}, {line}")
                    except UnicodeDecodeError as e:
                        print(f"Error decoding serial data: {e}")

    except serial.SerialException as e:
        print(f"Error opening serial port: {e}")
    except PermissionError as e:
        print(f"Permission error: {e}")
        print("Try running the script as an administrator.")
    finally:
        if 'ser' in locals() and ser.is_open:
            ser.close()
            print("Serial port closed")

if _name_ == '_main_':
    main()













